# Exercício Python 112: Dentro do pacote utilidadesCeV que criamos no desafio 111,
# temos um módulo chamado dado. Crie uma função chamada leiaDinheiro() que seja
# capaz de funcionar como a função imputa(), mas com uma validação de dados para
# aceitar apenas valores que seja monetários.


# Programa teste
from ex112.utilidadescev import moeda, dado

p = dado.leiadinheiro('Digite o preço: R$')
moeda.resumo(p, 20, 12)


# Programa da pasta dado __init__
def leiadinheiro(msg):
    valido = False
    while not valido:
        entrada = str(input(msg)).replace(',', '.').strip()
        if entrada.isalpha() or entrada.strip() == '':
            print(f'ERRO: {entrada} é um preço invalido')
        else:
            valido = True
            return float(entrada)


# Programa da pasta moeda __init__
def metade(n=0, formato=False):
    n = n / 2
    return n if formato is False else moeda(n)


def dobro(n=0, formato=False):
    n = n * 2
    return n if formato is False else moeda(n)


def aumentar(n=0, porc=0, formato=False):
    n = n + (n * (porc/100))
    return n if formato is False else moeda(n)


def diminuir(n=0, porc=0, formato=False):
    n = n - (n * (porc/100))
    return n if formato is False else moeda(n)


def moeda(preco=0, moeda='R$'):
    return f'{moeda}{preco:.2f}'.replace('.', ',')


def resumo(preco=0, taxa1=10, taxa2=5):
    print('-'*30)
    print('RESUMO DO VALOR'.center(30))
    print('-'*30)
    print(f'Preço analisado: {moeda(preco)} ')
    print(f'Dobro do preço : {dobro(preco, True)}')
    print(f'Metade do preço: {metade(preco, True)}')
    print(f'{taxa1}% de aumento : {aumentar(preco, taxa1, True)}')
    print(f'{taxa2}% de redução : {diminuir(preco, taxa2, True)}')
    print('-'*30)
